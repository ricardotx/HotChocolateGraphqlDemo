// <auto-generated />
using System;
using HotChocolateGraphqlDemo.Api.Src.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotChocolateGraphqlDemo.Api.Src.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20220125192848_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HotChocolateGraphqlDemo.Api.Src.Data.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99afa492-2e47-4075-b2c6-a438cd7fd31f"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("9add3f8a-ce60-4223-a136-ceae6774569a"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("28896733-33d2-43f6-94f1-357c0933a017"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("67679c43-896a-42cd-843e-75170c691118"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("ef9c5d12-c0d5-4e1f-b93a-b953211d00a0"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("67679c43-896a-42cd-843e-75170c691118"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("HotChocolateGraphqlDemo.Api.Src.Data.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9add3f8a-ce60-4223-a136-ceae6774569a"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("67679c43-896a-42cd-843e-75170c691118"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("HotChocolateGraphqlDemo.Api.Src.Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("UniqueCode");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("499eaab6-b7bd-4c1c-9c55-d9489897fe9f"),
                            Code = "admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("1430867d-777c-4453-83b4-0f61df8a3916"),
                            Code = "user",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("HotChocolateGraphqlDemo.Api.Src.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UniqueUserEmail");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81ba5eb1-c180-4163-9734-ca3c0392ff39"),
                            Email = "admin@mail.com",
                            Name = "Admin",
                            Password = "123",
                            RoleId = new Guid("499eaab6-b7bd-4c1c-9c55-d9489897fe9f"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("HotChocolateGraphqlDemo.Api.Src.Data.Entities.Account", b =>
                {
                    b.HasOne("HotChocolateGraphqlDemo.Api.Src.Data.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("HotChocolateGraphqlDemo.Api.Src.Data.Entities.User", b =>
                {
                    b.HasOne("HotChocolateGraphqlDemo.Api.Src.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HotChocolateGraphqlDemo.Api.Src.Data.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("HotChocolateGraphqlDemo.Api.Src.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
